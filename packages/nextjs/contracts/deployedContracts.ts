/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  114: {
    TestCompleXA2B: {
      address: "0xDAfe6A26D55C50A51b0583E82b2918Fa2841ec4F",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "string",
              name: "electionID",
              type: "string",
            },
          ],
          name: "ElectionReset",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "voter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "status",
              type: "bool",
            },
          ],
          name: "LogResetVoter",
          type: "event",
        },
        {
          inputs: [],
          name: "CheckTokenETHBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "VotreXOwnerName",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "admin",
          outputs: [
            {
              internalType: "bool",
              name: "isRegistered",
              type: "bool",
            },
            {
              internalType: "uint8",
              name: "adminOrgCount",
              type: "uint8",
            },
            {
              internalType: "bytes10",
              name: "AdminVoterIDOrg1",
              type: "bytes10",
            },
            {
              internalType: "bytes10",
              name: "AdminVoterIDOrg2",
              type: "bytes10",
            },
            {
              internalType: "address",
              name: "electionAdminAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nextOrgCreationBlock",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "adminName",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "RegisteredOrgID1",
              type: "string",
            },
            {
              internalType: "string",
              name: "RegisteredOrgID2",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "changeSystemState",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_orgID",
              type: "string",
            },
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
            {
              internalType: "string",
              name: "_electionName",
              type: "string",
            },
          ],
          name: "createElection",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "electionInfo",
          outputs: [
            {
              internalType: "enum TestCompleXA2B.ElectionStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "candidateList",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "isFinished",
              type: "bool",
            },
            {
              internalType: "bytes32",
              name: "electionID",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "electionName",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "orgID",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "totalParticipants",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "waveNumber",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "electionResults",
          outputs: [
            {
              internalType: "bool",
              name: "isPruned",
              type: "bool",
            },
            {
              internalType: "address",
              name: "adminAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "waveNumber",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalVoter",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "electionID",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "electionName",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "digitalSignature",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "registeredOrganization",
              type: "string",
            },
            {
              internalType: "string",
              name: "electionWinner",
              type: "string",
            },
            {
              internalType: "string",
              name: "signedBy",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_dataHash",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "isSingleWaveOrFinalStage",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "threshold",
              type: "uint256",
            },
          ],
          name: "finishElection",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
          ],
          name: "getAllCandidates",
          outputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "candidateID",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "candidateVoteCount",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "candidateName",
                  type: "string",
                },
              ],
              internalType: "struct TestCompleXA2B.CandidateDetail[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_electionID",
              type: "string",
            },
          ],
          name: "getCandidateResult",
          outputs: [
            {
              internalType: "uint8[]",
              name: "candidateID",
              type: "uint8[]",
            },
            {
              internalType: "string[]",
              name: "candidateName",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "candidateVoteCount",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
          ],
          name: "getElectionInfo",
          outputs: [
            {
              internalType: "bytes32",
              name: "electionID",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "electionName",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "waveNumber",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalCandidates",
              type: "uint256",
            },
            {
              internalType: "uint8[]",
              name: "candidateIDs",
              type: "uint8[]",
            },
            {
              internalType: "string[]",
              name: "candidateNames",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "voteCounts",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "totalParticipants",
              type: "uint256",
            },
            {
              internalType: "enum TestCompleXA2B.ElectionStatus",
              name: "statusElection",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "orgID",
              type: "string",
            },
          ],
          name: "getElectionListInOrg",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
            {
              internalType: "enum TestCompleXA2B.ElectionStatus[]",
              name: "",
              type: "uint8[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_orgID",
              type: "string",
            },
          ],
          name: "getOrgIDHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "getOwnerAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getOwnerName",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalOrganization",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalUser",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getUserInfo",
          outputs: [
            {
              internalType: "bool",
              name: "isRegistered",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isAdmin",
              type: "bool",
            },
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "userName",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "registeredOrgList",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "voterIDList",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "participatedElectionEvents",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "hasVoted",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isVotreXActivated",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "organizationData",
          outputs: [
            {
              internalType: "enum TestCompleXA2B.OrganizationType",
              name: "orgType",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "electionAdminAddresses",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "onPreparationElectionCounter",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "activeElectionCounter",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "archivedElectionCounter",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalMembers",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "orgName",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "orgID",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_orgName",
              type: "string",
            },
            {
              internalType: "string",
              name: "_orgID",
              type: "string",
            },
            {
              internalType: "string",
              name: "_adminName",
              type: "string",
            },
            {
              internalType: "enum TestCompleXA2B.OrganizationType",
              name: "_orgType",
              type: "uint8",
            },
          ],
          name: "registerOrganization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_voterName",
              type: "string",
            },
            {
              internalType: "string",
              name: "_orgID",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "uniqueVoterID",
              type: "bytes32",
            },
          ],
          name: "registerVoter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
          ],
          name: "startElection",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
            {
              internalType: "string",
              name: "_candidateName",
              type: "string",
            },
          ],
          name: "vote",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "voters",
          outputs: [
            {
              internalType: "bool",
              name: "isRegistered",
              type: "bool",
            },
            {
              internalType: "address",
              name: "VoterAddress",
              type: "address",
            },
            {
              internalType: "bytes16",
              name: "VoterIDOrg1",
              type: "bytes16",
            },
            {
              internalType: "bytes16",
              name: "VoterIDOrg2",
              type: "bytes16",
            },
            {
              internalType: "string",
              name: "VoterName",
              type: "string",
            },
            {
              internalType: "string",
              name: "RegisteredOrgID1",
              type: "string",
            },
            {
              internalType: "string",
              name: "RegisteredOrgID2",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    TestCompleXA2C: {
      address: "0x1CD12738d77B681c35b07a728AB1584D6846D6a6",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "CheckTokenETHBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "VotreXOwnerName",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
            {
              internalType: "string",
              name: "_candidateName",
              type: "string",
            },
          ],
          name: "addCandidateDetail",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "admin",
          outputs: [
            {
              internalType: "bool",
              name: "isRegistered",
              type: "bool",
            },
            {
              internalType: "uint8",
              name: "adminOrgCount",
              type: "uint8",
            },
            {
              internalType: "bytes10",
              name: "AdminVoterIDOrg1",
              type: "bytes10",
            },
            {
              internalType: "bytes10",
              name: "AdminVoterIDOrg2",
              type: "bytes10",
            },
            {
              internalType: "address",
              name: "electionAdminAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nextOrgCreationBlock",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "adminName",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "RegisteredOrgID1",
              type: "string",
            },
            {
              internalType: "string",
              name: "RegisteredOrgID2",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "changeSystemState",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_orgID",
              type: "string",
            },
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
            {
              internalType: "string",
              name: "_electionName",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "_candidateCount",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "_isHaveCandidateMode",
              type: "bool",
            },
          ],
          name: "createElection",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "electionInfo",
          outputs: [
            {
              internalType: "enum TestCompleXA2C.ElectionStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "candidateList",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "isFinished",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isHaveCandidateMode",
              type: "bool",
            },
            {
              internalType: "bytes32",
              name: "electionID",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "electionName",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "orgID",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "totalParticipants",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "waveNumber",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "electionResults",
          outputs: [
            {
              internalType: "bool",
              name: "isPruned",
              type: "bool",
            },
            {
              internalType: "address",
              name: "adminAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "waveNumber",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalVoter",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "electionID",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "electionName",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "digitalSignature",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "registeredOrganization",
              type: "string",
            },
            {
              internalType: "string",
              name: "electionWinner",
              type: "string",
            },
            {
              internalType: "string",
              name: "signedBy",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_dataHash",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "isSingleWaveOrFinalStage",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "_threshold",
              type: "uint256",
            },
          ],
          name: "finishElection",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
          ],
          name: "getAllCandidates",
          outputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "candidateID",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "candidateVoteCount",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "candidateName",
                  type: "string",
                },
              ],
              internalType: "struct TestCompleXA2C.CandidateDetail[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_electionID",
              type: "string",
            },
          ],
          name: "getCandidateResult",
          outputs: [
            {
              internalType: "uint8[]",
              name: "candidateID",
              type: "uint8[]",
            },
            {
              internalType: "string[]",
              name: "candidateName",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "candidateVoteCount",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
          ],
          name: "getElectionInfo",
          outputs: [
            {
              internalType: "bytes32",
              name: "electionID",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "electionName",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "waveNumber",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalCandidates",
              type: "uint256",
            },
            {
              internalType: "uint8[]",
              name: "candidateIDs",
              type: "uint8[]",
            },
            {
              internalType: "string[]",
              name: "candidateNames",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "voteCounts",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "totalParticipants",
              type: "uint256",
            },
            {
              internalType: "enum TestCompleXA2C.ElectionStatus",
              name: "statusElection",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "isHaveCandidateMode",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "orgID",
              type: "string",
            },
          ],
          name: "getElectionListInOrg",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
            {
              internalType: "enum TestCompleXA2C.ElectionStatus[]",
              name: "",
              type: "uint8[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_orgID",
              type: "string",
            },
          ],
          name: "getOrgIDHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "getOwnerAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getOwnerName",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalOrganization",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalUser",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getUserInfo",
          outputs: [
            {
              internalType: "bool",
              name: "isRegistered",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isAdmin",
              type: "bool",
            },
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "userName",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "registeredOrgList",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "voterIDList",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "hasVoted",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
          ],
          name: "isVoterChecked",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isVotreXActivated",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "organizationData",
          outputs: [
            {
              internalType: "enum TestCompleXA2C.OrganizationType",
              name: "orgType",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "electionAdminAddresses",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "onPreparationElectionCounter",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "activeElectionCounter",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "archivedElectionCounter",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalMembers",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "orgName",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "orgID",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_orgName",
              type: "string",
            },
            {
              internalType: "string",
              name: "_orgID",
              type: "string",
            },
            {
              internalType: "string",
              name: "_adminName",
              type: "string",
            },
            {
              internalType: "enum TestCompleXA2C.OrganizationType",
              name: "_orgType",
              type: "uint8",
            },
          ],
          name: "registerOrganization",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_voterName",
              type: "string",
            },
            {
              internalType: "string",
              name: "_orgID",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "uniqueVoterID",
              type: "bytes32",
            },
          ],
          name: "registerVoter",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
          ],
          name: "startElection",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userElectionID",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "candidateID",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "_candidateName",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isModeHaveCandidate",
              type: "bool",
            },
          ],
          name: "vote",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "voters",
          outputs: [
            {
              internalType: "bool",
              name: "isRegistered",
              type: "bool",
            },
            {
              internalType: "address",
              name: "VoterAddress",
              type: "address",
            },
            {
              internalType: "bytes16",
              name: "VoterIDOrg1",
              type: "bytes16",
            },
            {
              internalType: "bytes16",
              name: "VoterIDOrg2",
              type: "bytes16",
            },
            {
              internalType: "string",
              name: "VoterName",
              type: "string",
            },
            {
              internalType: "string",
              name: "RegisteredOrgID1",
              type: "string",
            },
            {
              internalType: "string",
              name: "RegisteredOrgID2",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
